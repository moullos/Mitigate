using Mitigate.Enumerations.BehaviourPreventionOnEndpoint;
using Mitigate.Utils;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Mitigate.Enumerations.ExecutionPrevention
{
    class AttackSurfaceReduction : Enumeration
    {
        public override string Name => "AttackSurfaceReduction";
        public override string MitigationType => "Exploit Protection";
        public override string MitigationDescription => "Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass application control.";
        public override string EnumerationDescription => "Enumerates the status of all ASR rules";

        public override string[] Techniques => new string[] {
            "T1189",
            "T1203",
            "T1068",
            "T1211",
            "T1212",
            "T1210",
            "T1080",
            "T1218",
            "T1218.011",
            "T1218.010",
        };

        public override IEnumerable<EnumerationResults> Enumerate(Context context)
        {
            // ASR
            if (ASRUtils.IsASREnabled())
            {
                yield return new BooleanConfig("ASR", true);
                if (context.Arguments.Full)
                    foreach(var rule in ASRUtils.GetASRRulesStatus())
                    {
                        yield return new BooleanConfig(rule.Key, rule.Value);
                    }
            }
            else
            {
                yield return new BooleanConfig("ASR", false);
            }
        }
    }
}
